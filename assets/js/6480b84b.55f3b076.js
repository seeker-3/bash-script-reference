"use strict";(self.webpackChunkbash_script_reference=self.webpackChunkbash_script_reference||[]).push([[673],{5757:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"brace-expansions","title":"Brace Expansions","description":"Ranges {start..stop..step}","source":"@site/docs/017-brace-expansions.md","sourceDirName":".","slug":"/brace-expansions","permalink":"/bash-script-reference/docs/brace-expansions","draft":false,"unlisted":false,"editUrl":"https://github.com/seeker-3/bash-script-reference/tree/main/docs/017-brace-expansions.md","tags":[],"version":"current","sidebarPosition":17,"frontMatter":{},"sidebar":"referenceSidebar","previous":{"title":"Parameter Expansions VAR2=${VAR...}","permalink":"/bash-script-reference/docs/parameter-expansions"},"next":{"title":"Tilde Expansion ~","permalink":"/bash-script-reference/docs/tilde-expansions"}}');var r=n(6070),a=n(5658);const t={},c="Brace Expansions",d={},o=[{value:"Ranges <code>{start..stop..step}</code>",id:"ranges-startstopstep",level:2},{value:"Brace Expansions <code>prefix{middle1,middle2,}suffix</code>",id:"brace-expansions-prefixmiddle1middle2suffix",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"brace-expansions",children:"Brace Expansions"})}),"\n",(0,r.jsxs)(s.h2,{id:"ranges-startstopstep",children:["Ranges ",(0,r.jsx)(s.code,{children:"{start..stop..step}"})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"echo {1..5} # 1 2 3 4 5\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'for i in {1..5}; do\n  echo "$i"\ndone\n'})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"echo {0..10..2} # 0 2 4 6 8 10\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"brace-expansions-prefixmiddle1middle2suffix",children:["Brace Expansions ",(0,r.jsx)(s.code,{children:"prefix{middle1,middle2,}suffix"})]}),"\n",(0,r.jsxs)(s.p,{children:["Will expand the prefix and suffix with each value inside the braces. ",(0,r.jsx)(s.code,{children:",,"})," will expand to the prefix and suffix without a value in between."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"echo prefix-{middle1,middle2,,middle4}-suffix # prefix-middle1-suffix prefix-middle2-suffix prefix--suffix prefix-middle4-suffix\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"cp file.txt{,.bak} # Expands to `cp file.txt file.txt.bak`\n"})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},5658:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>c});var i=n(758);const r={},a=i.createContext(r);function t(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);