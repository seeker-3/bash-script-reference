"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[752],{5882:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"basics","title":"Basics","description":"Comments","source":"@site/docs/002-basics.md","sourceDirName":".","slug":"/basics","permalink":"/bash-script-reference/docs/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/seeker-3/bash-script-reference/tree/main/docs/002-basics.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"referenceSidebar","previous":{"title":"Reference Intro","permalink":"/bash-script-reference/docs/intro"},"next":{"title":"Strings","permalink":"/bash-script-reference/docs/strings"}}');var r=s(6070),i=s(5658);const c={},t="Basics",l={},o=[{value:"Comments",id:"comments",level:2},{value:"Variables",id:"variables",level:2},{value:"Declaring Variables <code>VAR=x</code>",id:"declaring-variables-varx",level:3},{value:"Referencing Variables <code>$VAR</code>",id:"referencing-variables-var",level:3},{value:"Variable Interpolation",id:"variable-interpolation",level:3},{value:"Running Commands",id:"running-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"basics",children:"Basics"})}),"\n",(0,r.jsx)(n.h2,{id:"comments",children:"Comments"}),"\n",(0,r.jsxs)(n.p,{children:["Comments are lines that start with a ",(0,r.jsx)(n.code,{children:"#"})," character. Bash does not support multi-line comments."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# This is a comment\n"})}),"\n",(0,r.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,r.jsxs)(n.h3,{id:"declaring-variables-varx",children:["Declaring Variables ",(0,r.jsx)(n.code,{children:"VAR=x"})]}),"\n",(0,r.jsxs)(n.p,{children:["Declare variables using ",(0,r.jsx)(n.code,{children:"="}),". Variables cannot have spaces around the ",(0,r.jsx)(n.code,{children:"="})," sign."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"X=1\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"referencing-variables-var",children:["Referencing Variables ",(0,r.jsx)(n.code,{children:"$VAR"})]}),"\n",(0,r.jsxs)(n.p,{children:["Reference a variable using the ",(0,r.jsx)(n.code,{children:"$"})," sign."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"X2=$X\n"})}),"\n",(0,r.jsx)(n.p,{children:"Variables in bash are commonly written in upper snake case by convention"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"MY_VARIABLE=1\necho $MY_VARIABLE # 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"variable-interpolation",children:"Variable Interpolation"}),"\n",(0,r.jsx)(n.h2,{id:"running-commands",children:"Running Commands"}),"\n",(0,r.jsx)(n.p,{children:"By default, anything typed on a line will be executed as a command."}),"\n",(0,r.jsxs)(n.p,{children:["If you want to run a command that spans multiple lines, you can use a backslash ",(0,r.jsx)(n.code,{children:"\\"})," to escape the newline."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5658:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>t});var a=s(758);const r={},i=a.createContext(r);function c(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);