"use strict";(self.webpackChunkbash_script_reference=self.webpackChunkbash_script_reference||[]).push([[683],{8836:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"control-flow","title":"Control Flow","description":"Control flow in bash works very differently to other languages. Instead of branching on true or false, bash will branch on the exit status of a command. A successful command with an exit status of 0 is \\"true\\", and a failed command with a non-zero exit status of 1..255 is \\"false\\".","source":"@site/docs/014-control-flow.md","sourceDirName":".","slug":"/control-flow","permalink":"/bash-script-reference/docs/control-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/seeker-3/bash-script-reference/tree/main/docs/014-control-flow.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{},"sidebar":"referenceSidebar","previous":{"title":"Globbing","permalink":"/bash-script-reference/docs/globbing"},"next":{"title":"Conditionals","permalink":"/bash-script-reference/docs/conditionals"}}');var s=o(6070),a=o(5658);const c={},r="Control Flow",i={},l=[{value:"If Statements",id:"if-statements",level:2},{value:"For Loops",id:"for-loops",level:2},{value:"While Loops",id:"while-loops",level:2},{value:"Case Statements",id:"case-statements",level:2},{value:"Piping into Control flow (Magic)",id:"piping-into-control-flow-magic",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"control-flow",children:"Control Flow"})}),"\n",(0,s.jsxs)(n.p,{children:["Control flow in bash works very differently to other languages. Instead of branching on ",(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"}),", bash will branch on the exit status of a command. A successful command with an exit status of ",(0,s.jsx)(n.code,{children:"0"}),' is "true", and a failed command with a non-zero exit status of ',(0,s.jsx)(n.code,{children:"1..255"}),' is "false".']}),"\n",(0,s.jsx)(n.h2,{id:"if-statements",children:"If Statements"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"if command1; then\n  echo 'command1 succeeded!'\nelif command2; then\n  echo 'command1 failed but command2 succeeded!'\nelse\n  echo 'command1 and command2 failed!'\nfi\n"})}),"\n",(0,s.jsx)(n.h2,{id:"for-loops",children:"For Loops"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'for i in 1 2 3; do\n  echo "$i"\ndone\n# Output:\n# 1\n# 2\n# 3\n'})}),"\n",(0,s.jsx)(n.h2,{id:"while-loops",children:"While Loops"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"while command; do\n  echo 'command is succeeding'\ndone\n"})}),"\n",(0,s.jsx)(n.h2,{id:"case-statements",children:"Case Statements"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"case string in\npattern1)\n  echo 'string matches pattern1'\n  ;;\npattern2)\n  echo 'string matches pattern2'\n  ;;\n*) # All strings aka default case\n  echo 'string does not match any pattern'\n  ;;\nesac\n"})}),"\n",(0,s.jsx)(n.h2,{id:"piping-into-control-flow-magic",children:"Piping into Control flow (Magic)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'for i in {1..10}; do\n  printf "%03d\\n" "$i"\ndone | command\n# For loop output:\n# 001\n# 002\n# 003\n# ...\n# 010\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'command1 | while read -r line; do\n  echo "$line"\ndone | command2\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"command1 | if condition; then\n  true_command\nelse\n  false_command\nfi | command2\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"command1 | case string in\npattern1)\n  pattern1_command\n  ;;\npattern2)\n  pattern2_command\n  ;;\n*)\n  default_command\n  ;;\nesac | command2\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5658:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>r});var t=o(758);const s={},a=t.createContext(s);function c(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);